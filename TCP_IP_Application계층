네트워크인터페이스 계층 (4단계) - TCP/IP

  1. 애플리케이션계층 (HTTP)
    - 사용자에게 서비스 제공
    - 상대방에게 보낼 데이터를 담는다
  
  2. 트랜스포트계층 (TCP)
    - 데이터를 전송하기 좋게 쪼갠다
    - 목적지의 프로그램 식별 정보를 담는다 (ex. port번호)
    - 데이터 전송 실패시 재전송 요청 및 재전송 담당
  
  3. 인터넷계층 (IP)
    - 목적지 컴퓨터 식별 번호를 담는다 (ex.ip주소)
  
  4. 네트워크인터페이스게층 (이더넷)
    - 주변 하드웨어로 신호를 보내는데 필요한 데이터를 담는다
    
 데이터 전송 방식
  
  1. 패킷교환방식
    - 송신지와 수신지주소를 담고있다
    - 데이터를 쪼개서 다른 데이터 조각과 회선 공유, 여러상대와 통신 가능 (ex. 메일 보내면서 웹서핑 동시)
    - 패킷 많을수록 속도 저하
    
  2. 회선교환방식
    - 하나의 통신경로 점유, 일대일 통신만 가능
    - 통신속도 안정적
    
  애플리케이션계층
  
    - 사용자가 직접 사용하는 프로토콜 : HTTP,FTP,Telnet,SSH 등
    - 간접적으로 사용되는 프로토콜 : DNS,SSL,NTP 등
    
    - HTTP는 무상태 프로토콜, 요청과 응답을 한번 거치면 연결이 끊어짐
    - HTTP Requset = 요청정보행 + 헤더
    - HTTP Response = 응당접보행 + 헤더 + 메시지바디
    
    - 무상태 프로토콜은 여러 요청이 동일한 사용자인지 판단 불가능, 쿠키를 사용한다
    - 최초 웹서버 접속 시 쿠키 생성후 클라이언트에 전송, 클라이언트가 저장하고있는다.
    - 요청에 쿠키를 항상 보내서 같은 사용자임을 인증
    - 보안(쿠키제한) 쿠키가 생성된 웹서버에만 전송되도록 제한, 유효기간 지나면 쿠키 폐기
    - 유출되면 위험하므로 대부분 정보는 서버에 저장하고 쿠키에는 사용자식별용 SessionId만 저장하자
    
    * 이메일용 프로토콜
      - 송신과 수신은 서로 다른 프로토콜 사용
      - 송신 : SMTP (상태유지 stateful 프로토콜) -> 전송종료명령이 보내져야 통신 종료, 메일 서버로 메일을 보내준다
      - 수신 : POP (상태유지 stateful 프로토콜) , 메일서버에서 나에게 온 메일을 받아온다.
      
      - SMTP : 사용자 인증체계가 없어서 스팸메일 발송에도 쓰임, 해결책으로 SMTP auth 만들었다 (사용자인증기능 추가)
      - POP : 메일 수신 시 클라이언트에게 메일 저장하고 메일서버에 보관된 메일을 삭제한다. 용량 작은 모바일,태블릿은 서버에서 메일 삭제 안하는 IMAP 사용
      
    * PC끼리 파일 공유
      - 각각의 컴퓨터가 클라이언트도 되고 서버도 되는 P2P 방식 사용 (중앙서버가 없음)
      - 어떤 컴퓨터가 공유중인지 모르기때문에 접속시 일단 모든컴퓨터에게 연결됨을 알림. 알림받은 컴터는 자신의 정보를 응답으로 보냄. 이렇게 각각 식별
      
    * 파일전송 FTP
      - 웹페이지 파일 업로드 시 FTP서버에게 HTML 파일을 주고, 이 파일을 웹서버 프로그램이 웹브라우져에게 보낸다.
      - 데이터 커넥션 접속, 컨트롤 커넥션 접속 두개를 사용, 이렇게 분리하면 파일전송중에도 전송중단 명령 가능
      - 방화벽 혹은 라우터 사용시 액티브,패시브 모드 있음. 액티브모드는 서버에서 외부로 데이터 전송 막음. 
        패시브 모드를 사용하면 클라이언트에서 데이터커넥션 생성해서 외부로 파일 전송 
        
    * 원격 컴퓨터 제어
      - telnet, SSH로 원격지 컴퓨터 제어, cmd창에서 명령을 내리면 서버로 전달
      - GUI사용 원격제어: 윈도우-> RDP (프로토콜) , 범용 -> VNC, RFB 사용
    
    * VoIP , 영상스트리밍
      - 영상, 음성은 실시간을 빠르게 받아야 해서 트랜스포트계층은 UDP 사용, 데이터 살짝 손실 있어도 큰 문제가 아님 (신뢰성 보다 속도)
      - 보통 P2P를 사용하긴 하지만 통신상대를 찾기 어려워서 하이브리드로 사용 (클라이언트서버방식으로 디렉토리 서버 접속 후 상대 찾으면 P2P)
      - 동영상공유 프로토콜은 아직 막히는곳이 있어서 걍 HTTP에 실어서 보낸다.
